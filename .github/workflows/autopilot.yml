name: MediaTools Autopilot

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */2 * * *"   # every 2 hours

jobs:
  run-autopilot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install papermill nbconvert pandas ffmpeg-python yt-dlp openai-whisper srt pydrive2

      - name: Debug — list repo files
        run: ls -lh

      - name: Convert Notebook to Python
        run: |
          jupyter nbconvert --to script MediaTools_Autopilot.ipynb --output autopilot_script

      - name: Normalize script filename (fallback if .txt)
        run: |
          if [ -f "autopilot_script.txt" ]; then
            mv autopilot_script.txt autopilot_script.py
          fi
          if [ ! -f "autopilot_script.py" ]; then
            echo "❌ autopilot_script.py missing!"
            exit 1
          fi
          ls -lh autopilot_script.py

      - name: Patch autopilot script for GitHub runner
        run: |
          # Replace Colab get_ipython calls
          sed -i 's/get_ipython().system/os.system/g' autopilot_script.py
          # Replace raw shell calls like "!apt-get ..." or "apt-get ..." with os.system("...")
          sed -i 's/^!\\(.*\\)$/os.system("\\1")/g' autopilot_script.py
          sed -i 's/^\\s*apt-get/os.system("apt-get/g' autopilot_script.py
          sed -i 's/>\\/dev\\/null")/>\\/dev\\/null")/g' autopilot_script.py
          # Ensure os is imported
          grep -qxF 'import os' autopilot_script.py || sed -i '1i import os' autopilot_script.py
          echo "✅ Patched autopilot_script.py (first 20 lines):"
          head -n 20 autopilot_script.py

      - name: Run autopilot script
        run: |
          echo "Running script..."
          python3 autopilot_script.py

      - name: Upload results to Google Drive
        env:
          GDRIVE_FOLDER_ID: 1hyZKoX2dZW0VqtYiSWw4vhp4loJo-H0z
          GDRIVE_CREDENTIALS_DATA: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}
        run: |
          echo "$GDRIVE_CREDENTIALS_DATA" > creds.json
          python3 - <<'PY'
          import os, glob, json
          from pydrive2.auth import GoogleAuth
          from pydrive2.drive import GoogleDrive

          with open("creds.json","r") as f:
              data = json.load(f)
          with open("creds.json","w") as f:
              json.dump(data, f)

          gauth = GoogleAuth()
          gauth.LoadCredentialsFile("creds.json")
          if gauth.credentials is None:
              raise RuntimeError("No credentials loaded")
          drive = GoogleDrive(gauth)

          folder_id = os.getenv("GDRIVE_FOLDER_ID")
          files = glob.glob("Autopost_Clips/*")

          if not files:
              print("⚠️ No clips to upload")
          for fp in files:
              fname = os.path.basename(fp)
              f = drive.CreateFile({"title": fname, "parents": [{"id": folder_id}]})
              f.SetContentFile(fp)
              f.Upload()
              print(f"✅ Uploaded {fname} to Google Drive")
          PY

      - name: Upload artifacts (fallback)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: autopilot-results
          path: ./Autopost_Clips/**
