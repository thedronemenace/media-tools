name: MediaTools Autopilot

on:
  workflow_dispatch:

jobs:
  run-autopilot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nbconvert nbformat papermill pydrive2 gdown yt-dlp ffmpeg-python openai-whisper srt numpy pandas

      - name: Convert Notebook to Python
        run: |
          jupyter nbconvert --to script MediaTools_Autopilot.ipynb --output autopilot_script

      - name: Normalize script filename
        run: |
          if [ -f autopilot_script.txt ]; then mv autopilot_script.txt autopilot_script.py; fi

      - name: Patch script (remove Colab-only code + add imports)
        run: |
          sed -i '/get_ipython/d' autopilot_script.py
          sed -i '/^!/d' autopilot_script.py
          sed -i '/^%/d' autopilot_script.py
          grep -qxF "import os" autopilot_script.py || sed -i '1i import os' autopilot_script.py
          grep -qxF "import sys" autopilot_script.py || sed -i '2i import sys' autopilot_script.py

      - name: Run autopilot script
        run: |
          echo "Running autopilot_script.py..."
          python3 autopilot_script.py

      - name: Upload results to Google Drive
        run: |
          python3 - <<'PY'
          import os
          from pydrive2.auth import GoogleAuth
          from pydrive2.drive import GoogleDrive

          gauth = GoogleAuth()
          gauth.LoadCredentialsFile("credentials.json")
          if gauth.credentials is None:
              gauth.LocalWebserverAuth()
          elif gauth.access_token_expired:
              gauth.Refresh()
          else:
              gauth.Authorize()
          gauth.SaveCredentialsFile("credentials.json")

          drive = GoogleDrive(gauth)
          folder_id = "1hyZKoX2dZW0VqtYiSWw4vhp4loJo-H0z"

          for root, _, files in os.walk("Autopost_Clips"):
              for file in files:
                  fpath = os.path.join(root, file)
                  gfile = drive.CreateFile({"title": file, "parents": [{"id": folder_id}]})
                  gfile.SetContentFile(fpath)
                  gfile.Upload()
                  print(f"âœ… Uploaded {file} to Google Drive")
          PY
