name: MediaTools Autopilot

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */2 * * *"   # every 2 hours

jobs:
  run-autopilot:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nbconvert pandas ffmpeg-python yt-dlp openai-whisper srt pydrive2

      - name: Convert Notebook to script
        run: |
          jupyter nbconvert --to script MediaTools_Autopilot.ipynb

      - name: Run script
        run: |
          python MediaTools_Autopilot.py

      - name: Upload results to Google Drive
        env:
          GDRIVE_KEY: ${{ secrets.GDRIVE_KEY }}
          FOLDER_ID: ${{ secrets.FOLDER_ID }}
        run: |
          echo "$GDRIVE_KEY" > key.json
          python3 - <<EOF
          import os, json, glob, datetime, zipfile
          from pydrive2.auth import GoogleAuth
          from pydrive2.drive import GoogleDrive

          # Save service account key
          with open("sa.json", "w") as f:
              f.write(os.getenv("GDRIVE_KEY"))

          gauth = GoogleAuth()
          gauth.LoadCredentialsFile("sa.json")
          drive = GoogleDrive(gauth)

          folder_id = os.getenv("FOLDER_ID")
          ts = datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")

          files_to_upload = glob.glob("*.mp4") + glob.glob("*.txt")

          # Upload each raw result
          for file in files_to_upload:
              new_name = f"{os.path.splitext(file)[0]}_{ts}{os.path.splitext(file)[1]}"
              gfile = drive.CreateFile({"title": new_name, "parents": [{"id": folder_id}]})
              gfile.SetContentFile(file)
              gfile.Upload()
              print("Uploaded:", new_name)

          # Create a zip of all results
          zip_name = f"autopilot_results_{ts}.zip"
          with zipfile.ZipFile(zip_name, "w") as zf:
              for file in files_to_upload:
                  zf.write(file)

          gzip = drive.CreateFile({"title": zip_name, "parents": [{"id": folder_id}]})
          gzip.SetContentFile(zip_name)
          gzip.Upload()
          print("Uploaded ZIP:", zip_name)

          EOF
