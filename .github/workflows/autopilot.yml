name: MediaTools Autopilot

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */2 * * *"   # runs every 2 hours

jobs:
  run-autopilot:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nbconvert pandas ffmpeg-python yt-dlp openai-whisper srt pydrive2

      - name: Convert Notebook to script
        run: |
          jupyter nbconvert --to script MediaTools_Autopilot.ipynb --output MediaTools_Autopilot

      - name: Run script
        run: python MediaTools_Autopilot.py

      - name: Upload results to Google Drive
        env:
          GDRIVE_KEY: ${{ secrets.GDRIVE_KEY }}
          FOLDER_ID: ${{ secrets.FOLDER_ID }}
        run: |
          python - <<'EOF'
          import os, glob, json, datetime, zipfile
          from pydrive2.auth import GoogleAuth
          from pydrive2.drive import GoogleDrive

          # Save service account key
          key_data = os.getenv("GDRIVE_KEY")
          with open("sa.json", "w") as f:
              f.write(key_data)

          # Auth
          gauth = GoogleAuth()
          gauth.LoadCredentialsFile("sa.json")
          drive = GoogleDrive(gauth)

          folder_id = os.getenv("FOLDER_ID")
          timestamp = datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")

          uploads = []

          # Upload executed notebook results
          for file in glob.glob("*.ipynb"):
              new_name = f"{os.path.splitext(file)[0]}_{timestamp}.ipynb"
              f1 = drive.CreateFile({"title": new_name, "parents": [{"id": folder_id}]})
              f1.SetContentFile(file)
              f1.Upload()
              uploads.append(new_name)

          # Upload all generated clips
          for clip in glob.glob("*.mp4"):
              new_name = f"{os.path.splitext(clip)[0]}_{timestamp}.mp4"
              f2 = drive.CreateFile({"title": new_name, "parents": [{"id": folder_id}]})
              f2.SetContentFile(clip)
              f2.Upload()
              uploads.append(new_name)

          # Upload captions
          for cap in glob.glob("*.txt"):
              new_name = f"{os.path.splitext(cap)[0]}_{timestamp}.txt"
              f3 = drive.CreateFile({"title": new_name, "parents": [{"id": folder_id}]})
              f3.SetContentFile(cap)
              f3.Upload()
              uploads.append(new_name)

          # Create + upload ZIP of all results
          zip_name = f"autopilot_results_{timestamp}.zip"
          with zipfile.ZipFile(zip_name, "w") as zipf:
              for file in glob.glob("*.mp4") + glob.glob("*.txt") + glob.glob("*.ipynb"):
                  zipf.write(file)
          f4 = drive.CreateFile({"title": zip_name, "parents": [{"id": folder_id}]})
          f4.SetContentFile(zip_name)
          f4.Upload()
          uploads.append(zip_name)

          print("âœ… Uploaded files:", uploads)
          EOF
