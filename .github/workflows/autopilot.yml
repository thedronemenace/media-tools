name: MediaTools Autopilot

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */2 * * *" # runs every 2 hours

jobs:
  run-autopilot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install system + Python deps
        run: |
          sudo apt-get -y update
          sudo apt-get -y install ffmpeg
          python -m pip install --upgrade pip
          pip install papermill nbconvert pandas ffmpeg-python yt-dlp openai-whisper srt pydrive2

      - name: Convert notebook to script (force name)
        run: |
          jupyter nbconvert --to script MediaTools_Autopilot.ipynb --output autopilot_script.py

      - name: Debug â€” list files after conversion
        run: ls -R .

      - name: Patch script for GitHub runner
        run: |
          python3 - <<'PY'
          import os, re
          p = "autopilot_script.py"
          if not os.path.exists(p):
              raise SystemExit(f"Expected {p} not found. Present: {os.listdir('.')}")
          s = open(p, 'r', encoding='utf-8').read()

          # Remove Colab-only imports/mounts
          s = re.sub(r'from\s+google\.colab\s+import\s+drive\s*\n', '', s)
          s = re.sub(r'drive\.mount\([^\n]*\)\s*\n', '', s)

          # Remove get_ipython and ! commands
          s = re.sub(r'get_ipython\(\)\.system\(.*\)\s*\n', '', s)
          s = re.sub(r'^\s*!\S+.*$', '', s, flags=re.M)

          # Normalize paths from Colab to local workspace
          s = s.replace('/content/drive/MyDrive/', './')
          s = s.replace('/content/', './')

          # During testing, disable logo overlay if missing
          s = re.sub(r'^\s*USE_LOGO\s*=\s*True\s*$', 'USE_LOGO = False', s, flags=re.M)

          open(p, 'w', encoding='utf-8').write(s)
          print("Patched", p, "OK")
          PY

      - name: Run script
        run: python3 autopilot_script.py

      - name: Upload results to Google Drive
        env:
          GDRIVE_KEY: ${{ secrets.GDRIVE_KEY }}
        run: |
          python3 - <<'PY'
          import os, json
          from pydrive2.auth import GoogleAuth
          from pydrive2.drive import GoogleDrive

          keyfile = "key.json"
          with open(keyfile, "w") as f:
              f.write(os.environ["GDRIVE_KEY"])

          gauth = GoogleAuth()
          gauth.LoadCredentialsFile(keyfile)
          if gauth.credentials is None:
              gauth.LocalWebserverAuth()
          else:
              gauth.Authorize()
          drive = GoogleDrive(gauth)

          folder_id = "YOUR_DRIVE_FOLDER_ID"  # TODO: replace with your Drive folder ID
          for fname in os.listdir("./Autopost_Clips"):
              f = drive.CreateFile({"title": fname, "parents": [{"id": folder_id}]})
              f.SetContentFile(os.path.join("./Autopost_Clips", fname))
              f.Upload()
              print("Uploaded:", fname)
          PY

      - name: Upload artifacts (fallback)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: autopilot-results
          path: ./Autopost_Clips/**

      - name: Clean up old logs (keep last 20)
        run: |
          echo "Cleaning old logs..."
