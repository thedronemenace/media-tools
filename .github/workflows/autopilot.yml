name: MediaTools Autopilot

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */2 * * *"   # runs every 2 hours

jobs:
  run-autopilot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nbconvert pandas ffmpeg-python yt-dlp openai-whisper srt pydrive2

      - name: Convert Notebook to script
        run: |
          jupyter nbconvert --to script MediaTools_Autopilot.ipynb --output autopilot_script.py
          ls -l

      - name: Run autopilot script
        run: |
          python3 autopilot_script.py

      - name: Upload results to Google Drive
        run: |
          python3 - <<'PY'
          import os, glob, zipfile
          from pydrive2.auth import GoogleAuth
          from pydrive2.drive import GoogleDrive

          # Authenticate with service account
          gauth = GoogleAuth()
          gauth.LoadCredentialsFile("credentials.json")
          drive = GoogleDrive(gauth)

          folder_id = "1hyZKoX2dZW0VqtYiSWw4vhp4loJo-H0z"  # your Google Drive folder ID

          # Zip results
          zip_name = "results.zip"
          with zipfile.ZipFile(zip_name, "w") as z:
              for f in glob.glob("Autopost_Clips/**/*", recursive=True):
                  if os.path.isfile(f):
                      z.write(f)

          # Upload to Google Drive
          f = drive.CreateFile({"title": zip_name, "parents": [{"id": folder_id}]})
          f.SetContentFile(zip_name)
          f.Upload()
          print("âœ… Uploaded to Google Drive:", f["alternateLink"])
          PY

      - name: Upload artifacts (fallback)
        uses: actions/upload-artifact@v4
        with:
          name: autopilot-results
          path: ./Autopost_Clips/**
          retention-days: 7
