name: MediaTools Autopilot

on:
  workflow_dispatch:

jobs:
  run-autopilot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nbconvert nbformat papermill pydrive2 gdown yt-dlp ffmpeg-python openai-whisper srt numpy pandas

      - name: Convert Notebook to Python
        continue-on-error: true
        run: |
          echo "Attempting to convert notebook to script..."
          jupyter nbconvert --to script MediaTools_Autopilot.ipynb --output autopilot_script.py || true

      - name: Debug — list repo files
        run: ls -lh

      - name: Run autopilot script (with fallback)
        run: |
          echo "Running autopilot..."
          if [ -f "autopilot_script.py" ]; then
            echo "✅ Found autopilot_script.py, running it..."
            python3 autopilot_script.py
          else
            echo "⚠️ No autopilot_script.py found, running notebook with papermill..."
            papermill MediaTools_Autopilot.ipynb MediaTools_Autopilot_output.ipynb
          fi

      - name: Upload results to Google Drive
        if: always()
        run: |
          echo "Uploading results to Google Drive..."
          python3 <<PY
import os, glob
from pydrive2.auth import GoogleAuth
from pydrive2.drive import GoogleDrive

gauth = GoogleAuth()
gauth.LoadCredentialsFile("credentials.json")
if not gauth.credentials:
    gauth.LocalWebserverAuth()
drive = GoogleDrive(gauth)

folder_id = "1hyZKoX2dZW0VqtYiSWw4vhp4loJo-H0z"

for file_path in glob.glob("Autopost_Clips/*"):
    f = drive.CreateFile({"title": os.path.basename(file_path), "parents": [{"id": folder_id}]})
    f.SetContentFile(file_path)
    f.Upload()
    print("✅ Uploaded:", file_path)
PY
